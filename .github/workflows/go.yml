name: Go
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 8
          format: 'YYYY-MM-DD-HH-mm-ss'

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Build
        run: go build -v -o matchmaker.exe ./...

#     - name: Test
#       run: go test -v ./...

      - name: Uploading files
        uses: actions/upload-artifact@v2
        with:
          name: matchmaker
          path: |
            config/*
            matchmaker.exe

      - name: Zipping
        uses: papeloto/action-zip@v1
        with:
          files: config/ matchmaker.exe README.md
          recursive: false
          dest: matchmaker.zip

      - name: Deploy Latest Build
        uses: WebFreak001/deploy-nightly@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # automatically provided by github actions
        with:
          upload_url: https://uploads.github.com/repos/frankkopp/msfs_model_matching/releases/43894997/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
          release_id: 43894997 # same as above (id can just be taken out the upload_url, it's used to find old releases)
          asset_path: matchmaker.zip # path to archive to upload
          asset_name: matchmaker-latest_build-$$.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/zip # required by GitHub API
          max_releases: 1 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
          # test 2
